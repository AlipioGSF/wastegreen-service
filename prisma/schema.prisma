// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  email    String
  password String
  profile  Profile?
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String @db.VarChar(maxLength: 245)
  city    String @db.VarChar(maxLength: 245)
  address String @db.VarChar(maxLength: 245)
  zipcode Int

  profile   Profile  @relation(fields: [profileId], references: [id])
  profileId Int      @unique
  Collect   Collect?
}

model Plan {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(maxLength: 245)
  price       Decimal
  Profile     Profile?
}

model Rewards {
  id          Int      @id @default(autoincrement())
  description String   @db.VarChar(maxLength: 245)
  date        DateTime @db.Date

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int     @unique
}

model Collect {
  id   Int      @id @default(autoincrement())
  date DateTime @db.Date

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId Int     @unique

  address   Address @relation(fields: [addressId], references: [id])
  addressId Int     @unique
}

model Profile {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(maxLength: 245)
  cpf       String   @db.VarChar(maxLength: 245)
  create_at DateTime @db.Date
  update_at DateTime @db.Date

  address Address?
  rewards Rewards?
  collect Collect[]

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  plan   Plan? @relation(fields: [planId], references: [id])
  planId Int   @unique
}
